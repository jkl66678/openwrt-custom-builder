name: 设备列表同步与编译选项自动更新

on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: "0 0 * * 0"  # 每周日自动执行

jobs:
  sync-and-generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许提交代码
      actions: read

    steps:
      - name: 拉取仓库最新代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: 安装必要工具（适配 sync-devices.sh 依赖）
        run: |
          sudo apt update -qq > /dev/null 2>&1
          sudo apt install -y -qq git jq dos2unix build-essential libncurses5-dev \
            zlib1g-dev gawk gettext libssl-dev xsltproc wget unzip python3  # 包含脚本依赖的所有工具
          
          # 验证核心工具
          for tool in git jq awk sed find stat timeout; do
            if ! command -v "$tool" &> /dev/null; then
              echo "❌ 缺失工具：$tool"
              exit 1
            fi
          done
          echo "✅ 依赖工具安装完成"

      - name: 为同步脚本添加执行权限
        run: |
          if [ ! -f "scripts/sync-devices.sh" ]; then
            echo "❌ 未找到同步脚本：scripts/sync-devices.sh"
            exit 1
          fi
          chmod +x scripts/sync-devices.sh
          echo "✅ 同步脚本权限设置完成"

      - name: 执行同步脚本（生成 device-drivers.json）
        run: |
          # 调用你的 sync-devices.sh 生成设备列表
          ./scripts/sync-devices.sh || {
            echo "❌ 同步脚本执行失败，查看 sync-logs 日志"
            exit 1
          }
          # 验证生成的设备列表
          if [ ! -f "device-drivers.json" ] || [ ! -s "device-drivers.json" ]; then
            echo "❌ 设备列表生成失败（文件为空或不存在）"
            exit 1
          fi
          echo "✅ device-drivers.json 生成成功"

      - name: 准备生成脚本（更新 build.yml 选项）
        run: |
          if [ ! -f "scripts/generate-workflow.sh" ]; then
            echo "❌ 未找到生成脚本：scripts/generate-workflow.sh"
            exit 1
          fi
          chmod +x scripts/generate-workflow.sh
          echo "✅ 生成脚本准备完成"

      - name: 动态生成 build.yml（基于最新设备列表）
        run: |
          ./scripts/generate-workflow.sh || {
            echo "❌ 生成 build.yml 失败"
            exit 1
          }
          echo "✅ build.yml 已更新设备/芯片选项"

      - name: 提交更新到仓库
        run: |
          git config --global user.name "设备同步Bot"
          git config --global user.email "bot@example.com"
          
          # 提交设备列表和更新后的 build.yml
          git add device-drivers.json .github/workflows/build.yml sync-logs/
          if ! git diff --cached --quiet; then
            git commit -m "自动同步设备列表（$(date +%Y-%m-%d)）"
            git push origin main --force-with-lease
            echo "✅ 提交成功"
          else
            echo "ℹ️ 无变更，无需提交"
          fi

      - name: 上传同步日志（便于调试）
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-logs-${{ github.run_id }}
          path: |
            sync-logs/
            device-drivers.json
            .github/workflows/build.yml
          retention-days: 14
