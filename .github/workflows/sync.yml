name: 设备列表自动同步

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"  # 每周日自动同步

jobs:
  sync-devices:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
      - name: 拉取仓库代码
        uses: actions/checkout@v4

      - name: 安装依赖
        run: |
          sudo apt install -y git jq dos2unix
          # 安装jwt-cli替代openssl生成JWT（解决openssl不支持jwt命令的问题）
          sudo npm install -g jwt-cli

      - name: 准备同步脚本
        run: |
          if [ ! -f "scripts/sync-devices.sh" ]; then
            echo "❌ 未找到脚本：scripts/sync-devices.sh"
            exit 1
          fi
          dos2unix scripts/sync-devices.sh
          chmod +x scripts/sync-devices.sh

      - name: 执行同步脚本
        run: |
          ./scripts/sync-devices.sh || {
            echo "❌ 脚本执行失败，日志："
            cat sync-logs/sync-detail.log
            exit 1
          }

      - name: 生成新工作流（含最新设备）
        run: |
          if [ -f "scripts/generate-workflow.sh" ]; then
            chmod +x scripts/generate-workflow.sh
            ./scripts/generate-workflow.sh
          else
            echo "⚠️ 未找到生成工作流的脚本，跳过此步骤"
          fi

      - name: 生成GitHub App访问令牌（使用jwt-cli）
        run: |
          # 从Secrets获取App ID和私钥
          APP_ID=${{ secrets.GH_APP_ID }}
          PRIVATE_KEY="${{ secrets.GH_APP_PRIVATE_KEY }}"
          
          # 生成JWT令牌（有效期10分钟）
          IAT=$(date +%s)
          EXP=$((IAT + 600))
          # 使用jwt-cli生成令牌（替代openssl jwt）
          JWT=$(echo "$PRIVATE_KEY" | jwt encode --alg RS256 --exp $EXP --iss $APP_ID)
          
          # 获取App在当前仓库的安装ID
          INSTALLATION_ID=$(curl -s -H "Authorization: Bearer $JWT" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/app/installations" | jq -r '.[] | select(.repository_selection == "selected" and .repositories[0].name == "openwrt-custom-builder") | .id')
          
          # 获取访问令牌
          ACCESS_TOKEN=$(curl -s -X POST -H "Authorization: Bearer $JWT" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/app/installations/$INSTALLATION_ID/access_tokens" | jq -r '.token')
          
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: 提交更新（使用GitHub App权限）
        run: |
          git config --global user.name "Sync Bot"
          git config --global user.email "bot@example.com"
          git remote set-url origin "https://x-access-token:${{ env.ACCESS_TOKEN }}@github.com/jkl66678/openwrt-custom-builder.git"
          
          git add device-drivers.json .github/workflows/build.yml
          if git diff --cached --quiet; then
            echo "⚠️ 无更新可提交"
          else
            git commit -m "自动更新设备列表（$(date +%Y%m%d)）"
            git push origin main
          fi

      - name: 上传日志和配置文件
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sync-results-${{ github.run_id }}
          path: |
            ${{ github.workspace }}/sync-logs/
            ${{ github.workspace }}/device-drivers.json
          retention-days: 14
